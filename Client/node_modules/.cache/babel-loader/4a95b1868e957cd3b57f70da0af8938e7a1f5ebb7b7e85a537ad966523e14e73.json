{"ast":null,"code":"// import { Link } from \"react-router-dom\"\n// import { connect } from 'react-redux';\n// import { addFav, removeFav } from \"../../redux/actions\";\n// import { useState } from \"react\";\n// import { useEffect } from \"react\";\n// import styles from './Card.module.css'\n\n// export function Card(props) {\n\n//    const {myFavorites, id} = props\n//    // const [isFav, setIsFav] = useState(false)\n//    const isFav = myFavorites.some((fav) => fav.id === id)\n\n//    const handleFavorite = () => {\n//       if (isFav) {\n//          // setIsFav(false)\n//          // props.removeFav(props.id)\n//          removeFav(id)\n//       } else {\n//          // setIsFav(true)\n//          // props.addFav(props)\n//          addFav(props)\n//       }\n//    }\n\n//    // useEffect(() => {\n//    //    myFavorites.forEach((fav) => {\n//    //       if (fav.id === id) {\n//    //          setIsFav(true);\n//    //       }\n//    //    });\n//    // }, [myFavorites]);\n\n//    return (\n//       <div className={styles.card}>\n//          {isFav ? (<button className={styles.favoriteButton} onClick={handleFavorite}>‚ù§Ô∏è</button>) : (<button className={styles.favoriteButton} onClick={handleFavorite}>ü§ç</button>)}\n//          {!props.isFavoriteView && (<button className={styles.closeButton} onClick={() => props.onClose(props.id)} disabled={props.isFavoriteView}>X</button>)}\n//          <Link to={`/detail/${props.id}`} className={styles.detailLink}>\n//          <h2 className={styles.name}>{props.name}</h2>\n//          </Link>\n//          <h2 className={styles.status}>Status: {props.status}</h2>\n//          <h2 className={styles.species}>Specie: {props.species}</h2>\n//          <h2 className={styles.gender}>Gender: {props.gender}</h2>\n//          <h2 className={styles.origin}>Origin: {props.origin}</h2>\n//          <img src={props.image} alt='' className={styles.imgCard} />\n//       </div>\n//    );\n// }\n\n// export function mapDispatchToProps(dispatch) {\n//    return ({addFav: (character) => {dispatch(addFav(character))}, removeFav: (id) => {dispatch(removeFav(id))}})\n// }\n\n// export function mapStateToProps(state) {\n//    return {myFavorites: state.myFavorites}\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Card)","map":{"version":3,"names":[],"sources":["C:/Users/Lucas/Desktop/Lucas/HENRY/BootCamp/PI - Rick and Morty/Client/src/components/Card/Card.jsx"],"sourcesContent":["// import { Link } from \"react-router-dom\"\r\n// import { connect } from 'react-redux';\r\n// import { addFav, removeFav } from \"../../redux/actions\";\r\n// import { useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import styles from './Card.module.css'\r\n\r\n// export function Card(props) {\r\n\r\n//    const {myFavorites, id} = props\r\n//    // const [isFav, setIsFav] = useState(false)\r\n//    const isFav = myFavorites.some((fav) => fav.id === id)\r\n\r\n//    const handleFavorite = () => {\r\n//       if (isFav) {\r\n//          // setIsFav(false)\r\n//          // props.removeFav(props.id)\r\n//          removeFav(id)\r\n//       } else {\r\n//          // setIsFav(true)\r\n//          // props.addFav(props)\r\n//          addFav(props)\r\n//       }\r\n//    }\r\n\r\n//    // useEffect(() => {\r\n//    //    myFavorites.forEach((fav) => {\r\n//    //       if (fav.id === id) {\r\n//    //          setIsFav(true);\r\n//    //       }\r\n//    //    });\r\n//    // }, [myFavorites]);\r\n\r\n//    return (\r\n//       <div className={styles.card}>\r\n//          {isFav ? (<button className={styles.favoriteButton} onClick={handleFavorite}>‚ù§Ô∏è</button>) : (<button className={styles.favoriteButton} onClick={handleFavorite}>ü§ç</button>)}\r\n//          {!props.isFavoriteView && (<button className={styles.closeButton} onClick={() => props.onClose(props.id)} disabled={props.isFavoriteView}>X</button>)}\r\n//          <Link to={`/detail/${props.id}`} className={styles.detailLink}>\r\n//          <h2 className={styles.name}>{props.name}</h2>\r\n//          </Link>\r\n//          <h2 className={styles.status}>Status: {props.status}</h2>\r\n//          <h2 className={styles.species}>Specie: {props.species}</h2>\r\n//          <h2 className={styles.gender}>Gender: {props.gender}</h2>\r\n//          <h2 className={styles.origin}>Origin: {props.origin}</h2>\r\n//          <img src={props.image} alt='' className={styles.imgCard} />\r\n//       </div>\r\n//    );\r\n// }\r\n\r\n// export function mapDispatchToProps(dispatch) {\r\n//    return ({addFav: (character) => {dispatch(addFav(character))}, removeFav: (id) => {dispatch(removeFav(id))}})\r\n// }\r\n\r\n// export function mapStateToProps(state) {\r\n//    return {myFavorites: state.myFavorites}\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Card)\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}