{"ast":null,"code":"// import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\n\n// const initialState = {\n//     myFavorites: [],\n//     allCharacters: [], \n// };\n\n// const rootReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'ADD_FAV':\n//             // return {\n//             //     ...state,\n//             //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\n//             //     myFavorites: [...state.myFavorites, action.payload],\n//             // };\n//             return { ...state, myFavorites: action.payload, allCharacters: action.payload }\n//         case 'REMOVE_FAV':\n//             // return {\n//             //     ...state,\n//             //     myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\n//             //     allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\n//             // };\n//             return { ...state, myFavorites: action.payload, allCharacters: action.payload }\n//             case FILTER:\n//                 if (action.payload !== \"Todos\") {\n//                   const filteredCharacters = state.allCharacters.filter(\n//                     (character) => character.gender === action.payload\n//                   );\n//                   return {\n//                     ...state,\n//                     myFavorites: filteredCharacters,\n//                   };\n//                 } else {\n//                   return {\n//                     ...state,\n//                     myFavorites: [...state.allCharacters],\n//                   };\n//                 }\n//         case ORDER:\n//             let orderedCharacters = [...state.allCharacters];\n//             if (action.payload === \"A\") {\n//                 orderedCharacters.sort((a, b) => a.id - b.id);\n//             } else if (action.payload === \"D\") {\n//                 orderedCharacters.sort((a, b) => b.id - a.id);\n//             }\n//             return {\n//                 ...state,\n//                 myFavorites: orderedCharacters,\n//             };\n//         default:\n//             return state;\n//     }\n// };\n\n// export default rootReducer;","map":{"version":3,"names":[],"sources":["C:/Users/Lucas/Desktop/Lucas/HENRY/BootCamp/PI - Rick and Morty/Client/src/redux/reducer.js"],"sourcesContent":["// import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\r\n\r\n// const initialState = {\r\n//     myFavorites: [],\r\n//     allCharacters: [], \r\n// };\r\n\r\n// const rootReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case 'ADD_FAV':\r\n//             // return {\r\n//             //     ...state,\r\n//             //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\r\n//             //     myFavorites: [...state.myFavorites, action.payload],\r\n//             // };\r\n//             return { ...state, myFavorites: action.payload, allCharacters: action.payload }\r\n//         case 'REMOVE_FAV':\r\n//             // return {\r\n//             //     ...state,\r\n//             //     myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\r\n//             //     allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\r\n//             // };\r\n//             return { ...state, myFavorites: action.payload, allCharacters: action.payload }\r\n//             case FILTER:\r\n//                 if (action.payload !== \"Todos\") {\r\n//                   const filteredCharacters = state.allCharacters.filter(\r\n//                     (character) => character.gender === action.payload\r\n//                   );\r\n//                   return {\r\n//                     ...state,\r\n//                     myFavorites: filteredCharacters,\r\n//                   };\r\n//                 } else {\r\n//                   return {\r\n//                     ...state,\r\n//                     myFavorites: [...state.allCharacters],\r\n//                   };\r\n//                 }\r\n//         case ORDER:\r\n//             let orderedCharacters = [...state.allCharacters];\r\n//             if (action.payload === \"A\") {\r\n//                 orderedCharacters.sort((a, b) => a.id - b.id);\r\n//             } else if (action.payload === \"D\") {\r\n//                 orderedCharacters.sort((a, b) => b.id - a.id);\r\n//             }\r\n//             return {\r\n//                 ...state,\r\n//                 myFavorites: orderedCharacters,\r\n//             };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// export default rootReducer;\r\n\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}