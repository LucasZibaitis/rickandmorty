{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_FAV':\n      // return {\n      //     ...state,\n      //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\n      //     myFavorites: [...state.myFavorites, action.payload],\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\n        allCharacters: state.allCharacters.filter(character => character.id !== action.payload)\n      };\n    case FILTER:\n      if (action.payload !== \"Todos\") {\n        const filteredCharacters = state.allCharacters.filter(character => character.gender === action.payload);\n        return {\n          ...state,\n          myFavorites: filteredCharacters\n        };\n      } else {\n        return {\n          ...state,\n          myFavorites: [...state.allCharacters]\n        };\n      }\n    case ORDER:\n      let orderedCharacters = [...state.allCharacters];\n      if (action.payload === \"A\") {\n        orderedCharacters.sort((a, b) => a.id - b.id);\n      } else if (action.payload === \"D\") {\n        orderedCharacters.sort((a, b) => b.id - a.id);\n      }\n      return {\n        ...state,\n        myFavorites: orderedCharacters\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","action","type","payload","filter","character","id","filteredCharacters","gender","orderedCharacters","sort","a","b"],"sources":["C:/Users/Lucas/Desktop/Lucas/HENRY/BootCamp/PI - Rick and Morty/PI---Rick-and-Morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: [], \r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_FAV':\r\n            // return {\r\n            //     ...state,\r\n            //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\r\n            //     myFavorites: [...state.myFavorites, action.payload],\r\n            // };\r\n            return { ...state, myFavorites: action.payload, allCharacters: action.payload }\r\n        case REMOVE_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\r\n                allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\r\n            };\r\n            case FILTER:\r\n                if (action.payload !== \"Todos\") {\r\n                  const filteredCharacters = state.allCharacters.filter(\r\n                    (character) => character.gender === action.payload\r\n                  );\r\n                  return {\r\n                    ...state,\r\n                    myFavorites: filteredCharacters,\r\n                  };\r\n                } else {\r\n                  return {\r\n                    ...state,\r\n                    myFavorites: [...state.allCharacters],\r\n                  };\r\n                }\r\n        case ORDER:\r\n            let orderedCharacters = [...state.allCharacters];\r\n            if (action.payload === \"A\") {\r\n                orderedCharacters.sort((a, b) => a.id - b.id);\r\n            } else if (action.payload === \"D\") {\r\n                orderedCharacters.sort((a, b) => b.id - a.id);\r\n            }\r\n            return {\r\n                ...state,\r\n                myFavorites: orderedCharacters,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,WAAW;AAE9D,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV;MACA;MACA;MACA;MACA;MACA,OAAO;QAAE,GAAGF,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAAEL,aAAa,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACnF,KAAKV,UAAU;MACX,OAAO;QACH,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACO,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAAC;QACnFL,aAAa,EAAEE,KAAK,CAACF,aAAa,CAACM,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;MAC1F,CAAC;IACD,KAAKT,MAAM;MACP,IAAIO,MAAM,CAACE,OAAO,KAAK,OAAO,EAAE;QAC9B,MAAMI,kBAAkB,GAAGP,KAAK,CAACF,aAAa,CAACM,MAAM,CAClDC,SAAS,IAAKA,SAAS,CAACG,MAAM,KAAKP,MAAM,CAACE,OAC7C,CAAC;QACD,OAAO;UACL,GAAGH,KAAK;UACRH,WAAW,EAAEU;QACf,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGP,KAAK;UACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa;QACtC,CAAC;MACH;IACR,KAAKH,KAAK;MACN,IAAIc,iBAAiB,GAAG,CAAC,GAAGT,KAAK,CAACF,aAAa,CAAC;MAChD,IAAIG,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;QACxBM,iBAAiB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,CAAC;MACjD,CAAC,MAAM,IAAIL,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;QAC/BM,iBAAiB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE,CAAC;MACjD;MACA,OAAO;QACH,GAAGN,KAAK;QACRH,WAAW,EAAEY;MACjB,CAAC;IACL;MACI,OAAOT,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}