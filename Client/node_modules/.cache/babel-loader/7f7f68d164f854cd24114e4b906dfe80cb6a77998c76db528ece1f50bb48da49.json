{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\Lucas\\\\HENRY\\\\BootCamp\\\\PI - Rick and Morty\\\\Client\\\\src\\\\components\\\\Card\\\\Card.jsx\",\n  _s = $RefreshSig$();\n// import { Link } from \"react-router-dom\"\n// import { connect } from 'react-redux';\n// import { addFav, removeFav } from \"../../redux/actions\";\n// import { useState } from \"react\";\n// import { useEffect } from \"react\";\n// import styles from './Card.module.css'\n\n// export function Card(props) {\n\n//    const myFavorites = props.myFavorites\n//    const [isFav, setIsFav] = useState(false)\n\n//    const handleFavorite = () => {\n//       if (isFav === true) {\n//          setIsFav(false)\n//          props.removeFav(props.id)\n//       } else {\n//          setIsFav(true)\n//          props.addFav(props)\n//       }\n//    }\n\n//    useEffect(() => {\n//       myFavorites.forEach((fav) => {\n//          if (fav.id === props.id) {\n//             setIsFav(true);\n//          }\n//       });\n//    }, [myFavorites]);\n\n//    return (\n//       <div className={styles.card}>\n//          {isFav ? (<button className={styles.favoriteButton} onClick={handleFavorite}>‚ù§Ô∏è</button>) : (<button className={styles.favoriteButton} onClick={handleFavorite}>ü§ç</button>)}\n//          {!props.isFavoriteView && (<button className={styles.closeButton} onClick={() => props.onClose(props.id)} disabled={props.isFavoriteView}>X</button>)}\n//          <Link to={`/detail/${props.id}`} className={styles.detailLink}>\n//          <h2 className={styles.name}>{props.name}</h2>\n//          </Link>\n//          <h2 className={styles.status}>Status: {props.status}</h2>\n//          <h2 className={styles.species}>Specie: {props.species}</h2>\n//          <h2 className={styles.gender}>Gender: {props.gender}</h2>\n//          <h2 className={styles.origin}>Origin: {props.origin}</h2>\n//          <img src={props.image} alt='' className={styles.imgCard} />\n//       </div>\n//    );\n// }\n\n// export function mapDispatchToProps(dispatch) {\n//    return ({addFav: (character) => {dispatch(addFav(character))}, removeFav: (id) => {dispatch(removeFav(id))}})\n// }\n\n// export function mapStateToProps(state) {\n//    return {myFavorites: state.myFavorites}\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Card)\n\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addFav, removeFav } from \"../../redux/actions\";\nimport styles from \"./Card.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  _s();\n  const {\n    id,\n    name,\n    myFavorites\n  } = props;\n  const isFavorite = myFavorites.some(fav => fav.id === id);\n  const [isFav, setIsFav] = useState(isFavorite);\n  const handleFavorite = () => {\n    if (isFav) {\n      setIsFav(false);\n      props.removeFav(id);\n    } else {\n      setIsFav(true);\n      props.addFav(props);\n    }\n  };\n  useEffect(() => {\n    setIsFav(isFavorite);\n  }, [isFavorite]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.card,\n    children: isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.favoriteButton,\n      onClick: handleFavorite,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.favoriteButton,\n      onClick: handleFavorite,\n      children: \"\\uD83E\\uDD0D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"2W7/nR8ievAtNQD9nU8G/VAwtrg=\");\n_c = Card;\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFav: character => {\n      dispatch(addFav(character));\n    },\n    removeFav: id => {\n      dispatch(removeFav(id));\n    }\n  };\n};\nexport default connect(null, mapDispatchToProps)(Card);\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["useEffect","useState","connect","addFav","removeFav","styles","jsxDEV","_jsxDEV","Card","props","_s","id","name","myFavorites","isFavorite","some","fav","isFav","setIsFav","handleFavorite","className","card","children","favoriteButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapDispatchToProps","dispatch","character","$RefreshReg$"],"sources":["C:/Users/Lucas/Desktop/Lucas/HENRY/BootCamp/PI - Rick and Morty/Client/src/components/Card/Card.jsx"],"sourcesContent":["// import { Link } from \"react-router-dom\"\r\n// import { connect } from 'react-redux';\r\n// import { addFav, removeFav } from \"../../redux/actions\";\r\n// import { useState } from \"react\";\r\n// import { useEffect } from \"react\";\r\n// import styles from './Card.module.css'\r\n\r\n// export function Card(props) {\r\n\r\n//    const myFavorites = props.myFavorites\r\n//    const [isFav, setIsFav] = useState(false)\r\n\r\n//    const handleFavorite = () => {\r\n//       if (isFav === true) {\r\n//          setIsFav(false)\r\n//          props.removeFav(props.id)\r\n//       } else {\r\n//          setIsFav(true)\r\n//          props.addFav(props)\r\n//       }\r\n//    }\r\n\r\n//    useEffect(() => {\r\n//       myFavorites.forEach((fav) => {\r\n//          if (fav.id === props.id) {\r\n//             setIsFav(true);\r\n//          }\r\n//       });\r\n//    }, [myFavorites]);\r\n\r\n//    return (\r\n//       <div className={styles.card}>\r\n//          {isFav ? (<button className={styles.favoriteButton} onClick={handleFavorite}>‚ù§Ô∏è</button>) : (<button className={styles.favoriteButton} onClick={handleFavorite}>ü§ç</button>)}\r\n//          {!props.isFavoriteView && (<button className={styles.closeButton} onClick={() => props.onClose(props.id)} disabled={props.isFavoriteView}>X</button>)}\r\n//          <Link to={`/detail/${props.id}`} className={styles.detailLink}>\r\n//          <h2 className={styles.name}>{props.name}</h2>\r\n//          </Link>\r\n//          <h2 className={styles.status}>Status: {props.status}</h2>\r\n//          <h2 className={styles.species}>Specie: {props.species}</h2>\r\n//          <h2 className={styles.gender}>Gender: {props.gender}</h2>\r\n//          <h2 className={styles.origin}>Origin: {props.origin}</h2>\r\n//          <img src={props.image} alt='' className={styles.imgCard} />\r\n//       </div>\r\n//    );\r\n// }\r\n\r\n// export function mapDispatchToProps(dispatch) {\r\n//    return ({addFav: (character) => {dispatch(addFav(character))}, removeFav: (id) => {dispatch(removeFav(id))}})\r\n// }\r\n\r\n// export function mapStateToProps(state) {\r\n//    return {myFavorites: state.myFavorites}\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Card)\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addFav, removeFav } from \"../../redux/actions\";\r\nimport styles from \"./Card.module.css\";\r\n\r\nfunction Card(props) {\r\n  const { id, name, myFavorites } = props;\r\n\r\n  const isFavorite = myFavorites.some((fav) => fav.id === id);\r\n  const [isFav, setIsFav] = useState(isFavorite);\r\n\r\n  const handleFavorite = () => {\r\n    if (isFav) {\r\n      setIsFav(false);\r\n      props.removeFav(id);\r\n    } else {\r\n      setIsFav(true);\r\n      props.addFav(props);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFav(isFavorite);\r\n  }, [isFavorite]);\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      {isFav ? (\r\n        <button className={styles.favoriteButton} onClick={handleFavorite}>\r\n          ‚ù§Ô∏è\r\n        </button>\r\n      ) : (\r\n        <button className={styles.favoriteButton} onClick={handleFavorite}>\r\n          ü§ç\r\n        </button>\r\n      )}\r\n      {/* Resto del c√≥digo... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFav: (character) => {\r\n      dispatch(addFav(character));\r\n    },\r\n    removeFav: (id) => {\r\n      dispatch(removeFav(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Card);\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,MAAM,EAAEC,SAAS,QAAQ,qBAAqB;AACvD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM;IAAEC,EAAE;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGJ,KAAK;EAEvC,MAAMK,UAAU,GAAGD,WAAW,CAACE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACL,EAAE,KAAKA,EAAE,CAAC;EAC3D,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACa,UAAU,CAAC;EAE9C,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIF,KAAK,EAAE;MACTC,QAAQ,CAAC,KAAK,CAAC;MACfT,KAAK,CAACL,SAAS,CAACO,EAAE,CAAC;IACrB,CAAC,MAAM;MACLO,QAAQ,CAAC,IAAI,CAAC;MACdT,KAAK,CAACN,MAAM,CAACM,KAAK,CAAC;IACrB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACJ,UAAU,CAAC;EACtB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEP,OAAA;IAAKa,SAAS,EAAEf,MAAM,CAACgB,IAAK;IAAAC,QAAA,EACzBL,KAAK,gBACJV,OAAA;MAAQa,SAAS,EAAEf,MAAM,CAACkB,cAAe;MAACC,OAAO,EAAEL,cAAe;MAAAG,QAAA,EAAC;IAEnE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETrB,OAAA;MAAQa,SAAS,EAAEf,MAAM,CAACkB,cAAe;MAACC,OAAO,EAAEL,cAAe;MAAAG,QAAA,EAAC;IAEnE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACT;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV;AAAClB,EAAA,CAlCQF,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAoCb,MAAMsB,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACL5B,MAAM,EAAG6B,SAAS,IAAK;MACrBD,QAAQ,CAAC5B,MAAM,CAAC6B,SAAS,CAAC,CAAC;IAC7B,CAAC;IACD5B,SAAS,EAAGO,EAAE,IAAK;MACjBoB,QAAQ,CAAC3B,SAAS,CAACO,EAAE,CAAC,CAAC;IACzB;EACF,CAAC;AACH,CAAC;AAED,eAAeT,OAAO,CAAC,IAAI,EAAE4B,kBAAkB,CAAC,CAACtB,IAAI,CAAC;AAAC,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}