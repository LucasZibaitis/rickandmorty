{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_FAV':\n      // return {\n      //     ...state,\n      //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\n      //     myFavorites: [...state.myFavorites, action.payload],\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case 'REMOVE_FAV':\n      // return {\n      //     ...state,\n      //     myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\n      //     allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case FILTER:\n      if (action.payload !== \"Todos\") {\n        const filteredCharacters = state.allCharacters.filter(character => character.gender === action.payload);\n        return {\n          ...state,\n          myFavorites: filteredCharacters\n        };\n      } else {\n        return {\n          ...state,\n          myFavorites: [...state.allCharacters]\n        };\n      }\n    case ORDER:\n      let orderedCharacters = [...state.allCharacters];\n      if (action.payload === \"A\") {\n        orderedCharacters.sort((a, b) => a.id - b.id);\n      } else if (action.payload === \"D\") {\n        orderedCharacters.sort((a, b) => b.id - a.id);\n      }\n      return {\n        ...state,\n        myFavorites: orderedCharacters\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","action","type","payload","filteredCharacters","filter","character","gender","orderedCharacters","sort","a","b","id"],"sources":["/Users/lucaszibaitis/Desktop/Henry/rickandmorty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions\";\n\nconst initialState = {\n    myFavorites: [],\n    allCharacters: [], \n};\n\nconst rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_FAV':\n            // return {\n            //     ...state,\n            //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\n            //     myFavorites: [...state.myFavorites, action.payload],\n            // };\n            return { ...state, myFavorites: action.payload, allCharacters: action.payload }\n        case 'REMOVE_FAV':\n            // return {\n            //     ...state,\n            //     myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\n            //     allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\n            // };\n            return { ...state, myFavorites: action.payload, allCharacters: action.payload }\n            case FILTER:\n                if (action.payload !== \"Todos\") {\n                  const filteredCharacters = state.allCharacters.filter(\n                    (character) => character.gender === action.payload\n                  );\n                  return {\n                    ...state,\n                    myFavorites: filteredCharacters,\n                  };\n                } else {\n                  return {\n                    ...state,\n                    myFavorites: [...state.allCharacters],\n                  };\n                }\n        case ORDER:\n            let orderedCharacters = [...state.allCharacters];\n            if (action.payload === \"A\") {\n                orderedCharacters.sort((a, b) => a.id - b.id);\n            } else if (action.payload === \"D\") {\n                orderedCharacters.sort((a, b) => b.id - a.id);\n            }\n            return {\n                ...state,\n                myFavorites: orderedCharacters,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,WAAW;AAE9D,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,SAAS;MACV;MACA;MACA;MACA;MACA;MACA,OAAO;QAAE,GAAGF,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAAEL,aAAa,EAAEG,MAAM,CAACE;MAAQ,CAAC;IACnF,KAAK,YAAY;MACb;MACA;MACA;MACA;MACA;MACA,OAAO;QAAE,GAAGH,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAAEL,aAAa,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC/E,KAAKT,MAAM;MACP,IAAIO,MAAM,CAACE,OAAO,KAAK,OAAO,EAAE;QAC9B,MAAMC,kBAAkB,GAAGJ,KAAK,CAACF,aAAa,CAACO,MAAM,CAClDC,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKN,MAAM,CAACE,OAC7C,CAAC;QACD,OAAO;UACL,GAAGH,KAAK;UACRH,WAAW,EAAEO;QACf,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGJ,KAAK;UACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa;QACtC,CAAC;MACH;IACR,KAAKH,KAAK;MACN,IAAIa,iBAAiB,GAAG,CAAC,GAAGR,KAAK,CAACF,aAAa,CAAC;MAChD,IAAIG,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;QACxBK,iBAAiB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,CAAC;MACjD,CAAC,MAAM,IAAIX,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;QAC/BK,iBAAiB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,CAAC;MACjD;MACA,OAAO;QACH,GAAGZ,KAAK;QACRH,WAAW,EAAEW;MACjB,CAAC;IACL;MACI,OAAOR,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}