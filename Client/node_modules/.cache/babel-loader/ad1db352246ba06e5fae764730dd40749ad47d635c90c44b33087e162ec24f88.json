{"ast":null,"code":"import { FILTER, ORDER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_FAV\":\n      // return {\n      //     ...state,\n      //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\n      //     myFavorites: [...state.myFavorites, action.payload],\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case \"REMOVE_FAV\":\n      // return {\n      //     ...state,\n      //     myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\n      //     allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\n      // };\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case FILTER:\n      if (action.payload !== \"Todos\") {\n        const filteredCharacters = state.allCharacters.filter(character => character.gender === action.payload);\n        return {\n          ...state,\n          myFavorites: filteredCharacters\n        };\n      } else {\n        return {\n          ...state,\n          myFavorites: [...state.allCharacters]\n        };\n      }\n    case ORDER:\n      let orderedCharacters = [...state.allCharacters];\n      if (action.payload === \"A\") {\n        orderedCharacters.sort((a, b) => a.id - b.id);\n      } else if (action.payload === \"D\") {\n        orderedCharacters.sort((a, b) => b.id - a.id);\n      }\n      return {\n        ...state,\n        myFavorites: orderedCharacters\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","action","type","payload","filteredCharacters","filter","character","gender","orderedCharacters","sort","a","b","id"],"sources":["C:/Users/Lucas/Desktop/Lucas/HENRY/BootCamp/PI - Rick and Morty/Client/src/redux/reducer.js"],"sourcesContent":["import { FILTER, ORDER } from \"./actions\";\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  allCharacters: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_FAV\":\r\n      // return {\r\n      //     ...state,\r\n      //     allCharacters: [...state.allCharacters, action.payload], // Agregar al arreglo allCharacters\r\n      //     myFavorites: [...state.myFavorites, action.payload],\r\n      // };\r\n      return {\r\n        ...state,\r\n        myFavorites: action.payload,\r\n        allCharacters: action.payload,\r\n      };\r\n    case \"REMOVE_FAV\":\r\n      // return {\r\n      //     ...state,\r\n      //     myFavorites: state.myFavorites.filter(character => character.id !== action.payload),\r\n      //     allCharacters: state.allCharacters.filter(character => character.id !== action.payload),\r\n      // };\r\n      return {\r\n        ...state,\r\n        myFavorites: action.payload,\r\n        allCharacters: action.payload,\r\n      };\r\n    case FILTER:\r\n      if (action.payload !== \"Todos\") {\r\n        const filteredCharacters = state.allCharacters.filter(\r\n          (character) => character.gender === action.payload\r\n        );\r\n        return {\r\n          ...state,\r\n          myFavorites: filteredCharacters,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          myFavorites: [...state.allCharacters],\r\n        };\r\n      }\r\n    case ORDER:\r\n      let orderedCharacters = [...state.allCharacters];\r\n      if (action.payload === \"A\") {\r\n        orderedCharacters.sort((a, b) => a.id - b.id);\r\n      } else if (action.payload === \"D\") {\r\n        orderedCharacters.sort((a, b) => b.id - a.id);\r\n      }\r\n      return {\r\n        ...state,\r\n        myFavorites: orderedCharacters,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,KAAK,QAAQ,WAAW;AAEzC,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ;MACA;MACA;MACA;MACA;MACA,OAAO;QACL,GAAGF,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAC3BL,aAAa,EAAEG,MAAM,CAACE;MACxB,CAAC;IACH,KAAK,YAAY;MACf;MACA;MACA;MACA;MACA;MACA,OAAO;QACL,GAAGH,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAC3BL,aAAa,EAAEG,MAAM,CAACE;MACxB,CAAC;IACH,KAAKT,MAAM;MACT,IAAIO,MAAM,CAACE,OAAO,KAAK,OAAO,EAAE;QAC9B,MAAMC,kBAAkB,GAAGJ,KAAK,CAACF,aAAa,CAACO,MAAM,CAClDC,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKN,MAAM,CAACE,OAC7C,CAAC;QACD,OAAO;UACL,GAAGH,KAAK;UACRH,WAAW,EAAEO;QACf,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGJ,KAAK;UACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa;QACtC,CAAC;MACH;IACF,KAAKH,KAAK;MACR,IAAIa,iBAAiB,GAAG,CAAC,GAAGR,KAAK,CAACF,aAAa,CAAC;MAChD,IAAIG,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;QAC1BK,iBAAiB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,CAAC;MAC/C,CAAC,MAAM,IAAIX,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;QACjCK,iBAAiB,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,CAAC;MAC/C;MACA,OAAO;QACL,GAAGZ,KAAK;QACRH,WAAW,EAAEW;MACf,CAAC;IACH;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}